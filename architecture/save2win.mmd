sequenceDiagram
  autonumber
  participant U as User (Browser)
  participant UI as Save2Win UI (Next.js + proxy)
  participant BoA as Bank of Anthos Frontend (Flask)
  participant CB as Save2Win /api/oauth (callback)
  participant API as Save2Win /api/game-state (proxy)
  participant ENG as Save2Win Engine (Flask)
  participant MCP as MCP Service
  participant TXS as BoA transactionservice
  participant GEM as Gemini API

  %% ---- Login / OAuth ----
  U->>UI: Click “Open Bank of Anthos”
  UI->>BoA: GET /bank/login (redirects to BoA login page)
  Note over U, BoA: User enters credentials into Bank of Anthos
  BoA-->>CB: POST to /api/oauth callback with id_token
  CB-->>U: 302 Redirect to /login/callback (sets HttpOnly cookie `boa_id_token`)
  U->>UI: /login/callback page reloads opener & closes popup

  %% ---- Session & Data ----
  U->>UI: Open dashboard / refresh page
  UI->>API: GET /api/game-state (browser automatically sends cookie)
  API->>API: Read `boa_id_token` from HttpOnly cookie
  API->>ENG: GET /api/v1/game-state (Authorization: Bearer <id_token>)

  %% ---- Engine gathers context & computes ----
  ENG->>MCP: getTransactions(userId from JWT)
  MCP->>TXS: GET /transactions?userId=...
  TXS-->>MCP: Raw Transactions
  MCP-->>ENG: Context bundle (transactions)

  Note right of ENG: Game logic (XP, streaks, badges) is applied.

  ENG->>GEM: (Optional) Prompt(context) for quest/tip
  GEM-->>ENG: Response with Quest + Tip

  ENG-->>API: Final Game State JSON
  API-->>UI: Game State JSON
  UI-->>U: Render dashboard (XP, quests, badges, tips)